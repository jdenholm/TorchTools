name: Code-quality checks

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]


jobs:
  code-quality:
    name: Code quality (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          environment-file: requirements-dev.conda.yaml
          auto-activate-base: false
          python-version: ${{ matrix.python-version }}
          channels: anaconda, conda-forge, defaults
      # - name: Install Python with conda
      #   run: |
      #     conda install python=${{ matrix.python-version }} --name base

      - name: Install dependencies
        run: |
          conda env update --f requirements-dev.conda.yaml --name base

      - name: env list
        run: |
          conda list

      - name: Lint with Pylint
        run: |
          python -m pylint --version

      # - name: Lint with Mypy
      #   run: |
      #     mypy $(git ls-files src/)

      # - name: Lint with Pydocstyle
      #   run: |
      #     pydocstyle --convention=numpy $(git ls-files src/)

      # - name: Test with Pytest
      #   run: |
      #     pytest tests/

# jobs:
#   build-linux:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: '3.10'
#     - name: Add conda to system path
#       run: |
#         # $CONDA is an environment variable pointing to the root of the miniconda directory
#         echo $CONDA/bin >> $GITHUB_PATH

#     - name: Install dependencies
#       run: |
#         conda env update --file requirements-dev.conda.yaml --name base

#     - name: Print python version
#       run: |
#         python --version

#     - name: Lint with Pylint
#       run: |
#         pylint $(git ls-files src/) --disable=duplicate-code

#     - name: Lint with Mypy
#       run: |
#         mypy $(git ls-files src/)

#     - name: Lint with Pydocstyle
#       run: |
#         pydocstyle --convention=numpy $(git ls-files src/)

#     - name: Test with Pytest
#       run: |
#         pytest tests/
